const mongoose = require('mongoose');
const AutoIncrement = require('mongoose-sequence')(mongoose);

const vulnSchema = mongoose.Schema({
    _id: Number,
    impactLevel: {type: Number, ref: 'Impact', required: true},
    title: {
        type: String,
        required: true
    },
    issue: String,
    remediation: String,
}, {versionKey: false}, { _id: false });

vulnSchema.plugin(AutoIncrement, {id: 'vuln_seq'});
// // Use pre middleware
// vulnSchema.pre('save', function (next) {
//
//     // Only increment when the document is new
//     if (this.isNew) {
//         Vulnerability.count().then(res => {
//             this._id = res; // Increment count
//             next();
//         });
//     } else {
//         next();
//     }
// });

const Vulnerability = module.exports = mongoose.model('Vulnerability', vulnSchema);

module.exports.vulnSchema = vulnSchema;

module.exports.getAllVulns = (callback) => {
    Vulnerability.find(callback);
};

module.exports.addVuln = (newVuln, callback) => {
    newVuln.save(callback);
};

module.exports.deleteVulnById = (id, callback) => {
    let query = {_id: id};
    Vulnerability.remove(query, callback);
};