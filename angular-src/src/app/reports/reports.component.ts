import {Component, OnInit} from '@angular/core';
import {Report} from '../report';
import {ReportService} from '../report.service';
import {VulnCounter} from '../VulnCounter';
import {Impact} from '../impact';

@Component({
    selector: 'app-reports',
    templateUrl: './reports.component.html',
    styleUrls: ['./reports.component.css']
})
export class ReportsComponent implements OnInit {

    constructor(private reportService: ReportService) {
    }

    vulnsMap: { report: Report, vulnCount: VulnCounter[] }[];
    impactLevels: Impact[];

    countVulns(reports: Report[]) {
        this.vulnsMap = [];
        const tempVulnsMap = this.vulnsMap;
        reports.forEach(function (report) {
            tempVulnsMap.push({report: report, vulnCount: []});
            const reportIndex = tempVulnsMap.findIndex(function (reportVulns) {
                return reportVulns.report._id === report._id;
            });

            const vulnsCounter = tempVulnsMap[reportIndex].vulnCount;

            report.vulns.forEach(function (vuln) {
                const vulnIndex = vulnsCounter.findIndex(function (counter) {
                    return vuln.impactLevel._id === counter.impactId;
                });
                if (vulnIndex >= 0) {
                    vulnsCounter[vulnIndex].count = vulnsCounter[vulnIndex].count + 1;
                } else {
                    vulnsCounter.push({impactId: vuln.impactLevel._id, count: 1});
                }
            });
            vulnsCounter.sort((n1, n2) => n1.impactId - n2.impactId);
        });
    }

    ngOnInit() {
        this.reportService.getReports()
            .subscribe(reports => this.countVulns(reports));

        this.reportService.getImpacts()
            .subscribe(impacts => this.impactLevels = impacts);
    }
}
